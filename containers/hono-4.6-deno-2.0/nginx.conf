events {
    #
}

http {
    server {
        listen 80;

        # Hono Deno Server on Port
        location / {
            # Disable caching to ensure all updates are immediate
            add_header Last-Modified $date_gmt;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;
            etag off;
            proxy_no_cache 1;
            proxy_cache_bypass 1;

            # Proxy requests to the Honoe Deno server
            # TODO: make this port dynamic (using Docker env variable)
            proxy_pass http://localhost:8000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support for Hono Deno
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Proxy Bridge (Deno + Hono.js) service on port 4000
        location /_bridge {
            # Strip the /_bridge prefix and pass the request to the Bridge service
            rewrite ^/_bridge(.*)$ $1 break;

            proxy_pass http://localhost:4000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}
