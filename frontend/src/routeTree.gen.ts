/* prettier-ignore-start */

/* eslint-disable */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// This file is auto-generated by TanStack Router
// Import Routes
import { Route as rootRoute } from "./routes/__root";
import { Route as AuthActivateImport } from "./routes/auth/activate";
import { Route as AuthForgotPasswordImport } from "./routes/auth/forgot-password";
import { Route as AuthLoginImport } from "./routes/auth/login";
import { Route as AuthResetPasswordImport } from "./routes/auth/reset-password";
import { Route as AuthSignupImport } from "./routes/auth/signup";
import { Route as IamIndexImport } from "./routes/iam/index";
import { Route as IndexImport } from "./routes/index";

// Create/Update Routes

const IndexRoute = IndexImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => rootRoute,
} as any);

const IamIndexRoute = IamIndexImport.update({
    id: "/iam/",
    path: "/iam/",
    getParentRoute: () => rootRoute,
} as any);

const AuthSignupRoute = AuthSignupImport.update({
    id: "/auth/signup",
    path: "/auth/signup",
    getParentRoute: () => rootRoute,
} as any);

const AuthResetPasswordRoute = AuthResetPasswordImport.update({
    id: "/auth/reset-password",
    path: "/auth/reset-password",
    getParentRoute: () => rootRoute,
} as any);

const AuthLoginRoute = AuthLoginImport.update({
    id: "/auth/login",
    path: "/auth/login",
    getParentRoute: () => rootRoute,
} as any);

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
    id: "/auth/forgot-password",
    path: "/auth/forgot-password",
    getParentRoute: () => rootRoute,
} as any);

const AuthActivateRoute = AuthActivateImport.update({
    id: "/auth/activate",
    path: "/auth/activate",
    getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
    interface FileRoutesByPath {
        "/": {
            id: "/";
            path: "/";
            fullPath: "/";
            preLoaderRoute: typeof IndexImport;
            parentRoute: typeof rootRoute;
        };
        "/auth/activate": {
            id: "/auth/activate";
            path: "/auth/activate";
            fullPath: "/auth/activate";
            preLoaderRoute: typeof AuthActivateImport;
            parentRoute: typeof rootRoute;
        };
        "/auth/forgot-password": {
            id: "/auth/forgot-password";
            path: "/auth/forgot-password";
            fullPath: "/auth/forgot-password";
            preLoaderRoute: typeof AuthForgotPasswordImport;
            parentRoute: typeof rootRoute;
        };
        "/auth/login": {
            id: "/auth/login";
            path: "/auth/login";
            fullPath: "/auth/login";
            preLoaderRoute: typeof AuthLoginImport;
            parentRoute: typeof rootRoute;
        };
        "/auth/reset-password": {
            id: "/auth/reset-password";
            path: "/auth/reset-password";
            fullPath: "/auth/reset-password";
            preLoaderRoute: typeof AuthResetPasswordImport;
            parentRoute: typeof rootRoute;
        };
        "/auth/signup": {
            id: "/auth/signup";
            path: "/auth/signup";
            fullPath: "/auth/signup";
            preLoaderRoute: typeof AuthSignupImport;
            parentRoute: typeof rootRoute;
        };
        "/iam/": {
            id: "/iam/";
            path: "/iam";
            fullPath: "/iam";
            preLoaderRoute: typeof IamIndexImport;
            parentRoute: typeof rootRoute;
        };
    }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
    "/": typeof IndexRoute;
    "/auth/activate": typeof AuthActivateRoute;
    "/auth/forgot-password": typeof AuthForgotPasswordRoute;
    "/auth/login": typeof AuthLoginRoute;
    "/auth/reset-password": typeof AuthResetPasswordRoute;
    "/auth/signup": typeof AuthSignupRoute;
    "/iam": typeof IamIndexRoute;
}

export interface FileRoutesByTo {
    "/": typeof IndexRoute;
    "/auth/activate": typeof AuthActivateRoute;
    "/auth/forgot-password": typeof AuthForgotPasswordRoute;
    "/auth/login": typeof AuthLoginRoute;
    "/auth/reset-password": typeof AuthResetPasswordRoute;
    "/auth/signup": typeof AuthSignupRoute;
    "/iam": typeof IamIndexRoute;
}

export interface FileRoutesById {
    __root__: typeof rootRoute;
    "/": typeof IndexRoute;
    "/auth/activate": typeof AuthActivateRoute;
    "/auth/forgot-password": typeof AuthForgotPasswordRoute;
    "/auth/login": typeof AuthLoginRoute;
    "/auth/reset-password": typeof AuthResetPasswordRoute;
    "/auth/signup": typeof AuthSignupRoute;
    "/iam/": typeof IamIndexRoute;
}

export interface FileRouteTypes {
    fileRoutesByFullPath: FileRoutesByFullPath;
    fullPaths:
        | "/"
        | "/auth/activate"
        | "/auth/forgot-password"
        | "/auth/login"
        | "/auth/reset-password"
        | "/auth/signup"
        | "/iam";
    fileRoutesByTo: FileRoutesByTo;
    to:
        | "/"
        | "/auth/activate"
        | "/auth/forgot-password"
        | "/auth/login"
        | "/auth/reset-password"
        | "/auth/signup"
        | "/iam";
    id:
        | "__root__"
        | "/"
        | "/auth/activate"
        | "/auth/forgot-password"
        | "/auth/login"
        | "/auth/reset-password"
        | "/auth/signup"
        | "/iam/";
    fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
    IndexRoute: typeof IndexRoute;
    AuthActivateRoute: typeof AuthActivateRoute;
    AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute;
    AuthLoginRoute: typeof AuthLoginRoute;
    AuthResetPasswordRoute: typeof AuthResetPasswordRoute;
    AuthSignupRoute: typeof AuthSignupRoute;
    IamIndexRoute: typeof IamIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
    IndexRoute: IndexRoute,
    AuthActivateRoute: AuthActivateRoute,
    AuthForgotPasswordRoute: AuthForgotPasswordRoute,
    AuthLoginRoute: AuthLoginRoute,
    AuthResetPasswordRoute: AuthResetPasswordRoute,
    AuthSignupRoute: AuthSignupRoute,
    IamIndexRoute: IamIndexRoute,
};

export const routeTree = rootRoute
    ._addFileChildren(rootRouteChildren)
    ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/activate",
        "/auth/forgot-password",
        "/auth/login",
        "/auth/reset-password",
        "/auth/signup",
        "/iam/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/activate": {
      "filePath": "auth/activate.tsx"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/reset-password": {
      "filePath": "auth/reset-password.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/iam/": {
      "filePath": "iam/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
